on_five_year_pulse_country = {
	on_actions = {
		on_bpm_five_year_pulse_country
	}
}

on_yearly_pulse_country = {
	on_actions = {
		on_bpm_yearly_pulse_country
		hpx_space_agency_funds
	}
}

on_half_yearly_pulse_country = {
	on_actions = {
		on_bpm_half_yearly_pulse_country
		hpx_china_tension_je
	}
}

on_election_campaign_end = {
	on_actions = {
		hpx_on_election_campaign_end

		bpm_update_enactment_success_on_action
		bpm_on_actions_colonial_check
	}
}

on_election_campaign_start = {
	on_actions = {
		hpx_on_election_campaign_start
	}
}

on_monthly_pulse = {
	on_actions = {
		hpx_space_agency_clean
	}
}

on_monthly_pulse_country = {
	on_actions = {
		on_bpm_monthly_pulse_country
		bpm_update_enactment_success_on_action
		bpm_on_actions_colonial_check
		hpx_single_party_reload
		hpx_eu_reload
		hpx_progressive_party_spawn
	}
}


on_wargoal_enforced = {
	on_actions = {
		on_bpm_wargoal_enforced
	}
}

on_investment_increased ={ 
	on_actions = {
		on_bpm_investment_increased
	}
}

on_investment_decreased ={ 
	on_actions = {
		on_bpm_investment_decreased
	}
}

# Root = The applicable country
# scope:technology = The technology type they just acquired
on_acquired_technology = {
	on_actions = {
		on_bpm_acquired_technology
		on_bpm_acquired_technology_peoples_spring
	}
}

on_country_released_as_independent = {
	on_actions = {
		on_bpm_country_releasing
	}
}

on_country_released_as_own_subject = {
	on_actions = {
		on_bpm_country_releasing
	}
}

on_country_released_as_overlord_subject = {
	on_actions = {
		on_bpm_country_releasing
	}
}

on_country_formed = {
	on_actions = {
		on_bpm_country_formed
	}
}

on_revolution_end = {
	on_actions = {
		on_bpm_country_releasing
		on_bpm_civil_war_won
	}
}

on_peace_agreement_signed_war_participant = {
	on_actions = {
		on_bpm_peace_agreement_signed_war_participant
	}
}



on_party_created = {
	on_actions = {
		on_bpm_party_created
	}
}

on_new_ruler = { 
	on_actions = {
		on_bpm_new_ruler
	}
	events = {
		bpm_scandinavia.1
	}
}

on_character_creation = {
	on_actions = {
		on_bpm_character_creation
	}
}

on_bpm_five_year_pulse_country = {
	effect = {
		every_interest_group = {
			limit = { hpx_interest_group_is_activated = yes }
			bpm_reorder_ideologies = yes
		}
	}
}

on_bpm_yearly_pulse_country = {
	effect = {
		bpm_rename_igs = yes
		bpm_update_variants = yes
		if = {
			limit = { 
				NOT = { has_global_variable = bpm_je_march_to_radicalism_progress }
			}
			set_global_variable = {
				name = bpm_je_march_to_radicalism_progress
				value = 0
			}
		}
		bpm_je_march_to_radicalism_progress_update = yes
	}
}

on_bpm_half_yearly_pulse_country = {
	events = {
		bpm_ig_attraction_utils.2
		bpm_union_laws.1
	}
	effect = {
		owner = { 
			update_party_support = yes
			bpm_setup_country_stubbornness = yes
			bpm_half_yearly_decrement_party_loyalty = yes
			bpm_setup_basic_igs = yes
			bpm_ig_update_ig_ban_support = yes
		}
	}
}

on_bpm_monthly_pulse_country = {
	events = {
		bpm_misc.1
		bpm_misc.3
		bpm_ig_attraction_utils.1
		bpm_clear_stubbornness_utils.3
		bpm_colony_events.2
		bpm_colony_events.3
	}
	random_events = {
		chance_of_no_event = 80
		1 = coup.6
	}

	effect = {
		hpx_rename_igs = yes
		if = {
			limit = {
				ig:ig_reformist_communist ?= {
					has_ideology = ideology:ideology_nonexistent
					hpx_interest_group_is_activated = yes
				}
			}
			bpm_initialize_reformist_communist = yes
		}
		if = {
			limit = {
				ig:ig_academia ?= {
					has_ideology = ideology:ideology_nonexistent
					hpx_interest_group_is_activated = yes
				}
			}
			bpm_initialize_academia = yes
		}
		if = {
			limit = {
				ig:ig_liberal ?= {
					has_ideology = ideology:ideology_nonexistent 
					hpx_interest_group_is_activated = yes
				}
			}
			bpm_initialize_modern_libs = yes
		}
		if = {
			limit = {
				has_law = law_type:law_colonial_admin
				NOT = { has_variable = bpm_on_col_adm }
			}
			bpm_colonial_admin_activate_effect = yes
		}
		if = {
			limit = {
				modifier:country_bpm_change_primary_culture_to_overlord = yes
				NOT = { has_variable = bpm_colony_primary_culture_set_to_overlord }
			}
			trigger_event = { id = bpm_colony_events.1 days = 1 }
		}
		if = {
			limit = {
				modifier:country_bpm_change_primary_culture_to_overlord = yes
				has_variable = bpm_current_overlord
				NOT = { var:bpm_current_overlord = top_overlord }
			}
			trigger_event = { id = bpm_colony_events.1 days = 1 }
		}
		if = {
			limit = {
				modifier:country_bpm_change_primary_culture_to_overlord = no
				has_variable = bpm_colony_primary_culture_set_to_overlord
			}
			bpm_colony_reset_primary_culture = yes
		}
		owner = { 
			bpm_update_ai_cheats = yes
			bpm_update_political_stability = yes
			bpm_update_igs_current_party = yes
			bpm_institution_workaround_effect = yes
			bpm_auto_research = yes

			if = {
				limit = { is_player = yes }
				bpm_rename_igs = yes
				bpm_update_variants = yes
				bpm_ig_update_ig_ban_support = yes
				every_interest_group = {
					limit = { hpx_interest_group_is_activated = yes }
					bpm_reorder_ideologies = yes
				}
			}
			# every_interest_group = {
			# 	if = {
			# 		limit = {
			# 			bpm_ig_enabled = no
			# 			OR = {
			# 				is_being_bolstered = yes
			# 				is_being_suppressed = yes
			# 			}
			# 		}
			# 		set_ig_bolstering = no
			# 		set_ig_suppression = no
			# 	}
			# }
		}
		if = {
			limit = {
				game_date > 1844.1.1
				game_date < 1845.1.1
				NOT = { has_variable = bpm_1848_famine_activated }
				bpm_country_is_in_western_europe = yes
			}
			set_variable = bpm_1848_famine_activated
		}
		if = {
			limit = { 
				has_global_variable = first_intl_chain_complete_var 
				owner = { global_country_ranking = 1 } # Making trigger happer once per month because paradox apparently has no on_action for global events??? what? how??
			}
			if = {
				limit = { NOT = { has_global_variable = bpm_je_second_intl_progress } }
				set_global_variable = {
					name = bpm_je_second_intl_progress
					value = 0
				}
			}
			bpm_je_second_intl_progress_rate_update = yes 
			bpm_handle_steady_global_var_growth = {
				VARIABLE = bpm_je_second_intl_progress
			}
		}
		if = {
			limit = { global_country_ranking = 1 }
			every_character_in_exile_pool = {
				set_variable = {
					name = bpm_rng_cull_agitator
					value = { 0 10 }
				}
				if = {
					limit = {
						is_historical = no
						has_role = agitator
						NOT = { has_variable = bpm_safe_from_culling }
						OR = {
							has_variable = bpm_character_in_institutional_ig_var
							popularity < 50
							var:bpm_rng_cull_agitator < 3
							age >= 56
						}
					}
					kill_character = yes
				}
				else = {
					set_variable = bpm_safe_from_culling
				}
			}
		}
		# 6 months cooldown
		if = {
			limit = {
				has_variable = bpm_cpal_removal_flag
			}
			change_variable = {
				name = bpm_cpal_removal_flag
				add = 1
			}
			if = {
				limit = {
					var:bpm_cpal_removal_flag >= 6
				}
				remove_variable = bpm_cpal_removal_flag
				remove_variable = bpm_cannot_promise_a_law
			}
		}
	}
}

bpm_on_actions_colonial_check = {
	effect = {
		if = {
			limit = {
				NOT = { owner = { has_law = law_type:law_colonial_admin } }
				owner = { has_variable = bpm_on_col_adm }
			}
			if = {
				limit = {
					is_subject = yes
					is_subject_type = subject_type_colony
				}
				change_subject_type = subject_type_dominion
			}
			remove_variable = bpm_on_col_adm
			every_interest_group = {
				limit = {
					OR = {
						is_interest_group_type = ig_landowners
						is_interest_group_type = ig_industrialists
						is_interest_group_type = ig_armed_forces
					}
				}
				remove_ideology = ideology_dop_metropole_loyalist
				bpm_reorder_ideologies = yes
			}
		}
	}
}

on_bpm_law_activated = {
	effect = {
		owner = {
			bpm_setup_country_stubbornness = yes
			bpm_institution_workaround_effect = yes
			bpm_cache_country_igs_radical_opposition_effect = yes
		}

		if = {
			limit = {
				game_date > 1836.1.1
				owner = { is_revolutionary = no }
			}
			if = {
				limit = {
					this.type = law_type:law_republic
				}
				trigger_event = bpm_send_notification.1
			}
			else_if = {
				limit = {
					this.type = law_type:law_council_republic
				}
				trigger_event = bpm_send_notification.2
			}
			else_if = {
				limit = {
					this.type = law_type:law_monarchy
				}
				trigger_event = bpm_send_notification.3
			}
		}

		if = {
			limit = { this.type = law_type:law_serfdom }
			owner = { set_variable = bpm_country_has_serfdom }
		}
		else_if = {
			limit = {
				this.type = {
					is_same_law_group_as = law_type:law_serfdom
					NOT = { this = law_type:law_serfdom }
				}
				owner = { has_variable = bpm_country_has_serfdom }
			}
			owner = {
				remove_variable = bpm_country_has_serfdom
				if = {
					limit = { is_player = no }
					if = {
						limit = {
							OR = {
								has_law = law_type:law_land_based_taxation
								has_law = law_type:law_consumption_based_taxation
							}
						}
						activate_law = law_type:law_per_capita_based_taxation
					}
					if = {
						limit = {
							has_law = law_type:law_traditionalism
						}
						activate_law = law_type:law_agrarianism	
					}
				}
			}
		}
		if = {
			limit = {
				this.type = {
					is_same_law_group_as = law_type:law_isolationism
					NOT = { this = law_type:law_isolationism }	
				}
				owner = { has_law = law_type:law_closed_borders }
			}
			owner = { activate_law = law_type:law_migration_controls }
		}
		else_if = {
			limit = {
				game_date > 1836.1.1
				this.type = law_type:law_isolationism
			}
			owner = { activate_law = law_type:law_closed_borders }
		}
		if = {
			limit = {
				this.type = {
					is_same_law_group_as = law_type:law_closed_borders
					NOT = { this = law_type:law_closed_borders}	
				}
				owner = { has_law = law_type:law_isolationism }
			}
			owner = { activate_law = law_type:law_mercantilism }
		}
		else_if = {
			limit = {
				game_date > 1836.1.1
				this.type = law_type:law_closed_borders
			}
			owner = { activate_law = law_type:law_isolationism }
		}

		if = {
			limit = {
				owner = { has_journal_entry = je_bpm_modernizers }
				if = {
					ig:ig_conservatives ?= {
						law_stance = {
							value >= approve
							law = prev.type
						}
					}
					change_variable = {
						name = bpm_je_modernizers_conservative_laws_passed
						add = 1
					}
				}
				if = {
					limit = {
						OR = {
							ig:ig_liberals ?= {
								law_stance = {
									value >= approve
									law = prev.type
								}
							}
							ig:ig_radicals ?= {
								law_stance = {
									value >= approve
									law = prev.type
								}
							}
						}
					}
					change_variable = {
						name = bpm_je_modernizers_liberal_laws_passed
						add = 1
					}
				}
			}
		}
	}
	events = {
		peoples_springtime.15
	}
}

on_bpm_seccession_start = {
	effect = {
		scope:target = {
			set_variable = bpm_can_new_constitution
		}
	}
}

on_bpm_capitulation = {
	owner = {
		add_modifier = {
			name = bpm_country_recently_lost_war
			years = 1
		}
	}
}

on_bpm_new_ruler = {
	# events = {
	# 	bpm_election_events.1
	# }
	effect = {
		owner = {
			if = {
				limit = {
					is_player = yes
					has_law = law_type:law_republic
					NOT = { has_law = law_type:law_autocracy }
				}
				trigger_event = { id = bpm_election_events.1 days = 30 }
			}
		}
	}
}

on_bpm_default = {
	effect = {
		bpm_remove_political_stability_big = yes
	}
}

on_bpm_diplo_play_war_start = {
	effect = {
		
		# Removing Rigidity from participants
		if = {
			limit = {
				war = {
					attacker_warleader = {
						country_rank > rank_value:insignificant_power
					}
					defender_warleader = {
						country_rank > rank_value:insignificant_power
					}
				}
			}
			every_scope_play_involved = {
				bpm_add_political_stability_big = yes
			}
		}

		# Removing permanent military defunding modifier for aggressors
		war = {
			if = {
				limit = {
					NOT = { has_war_goal = colonization_rights }
					NOT = {
						any_country = {
							OR = {
								is_revolutionary = yes
								is_secessionist = yes
							}
						}
					}
				}
				attacker_warleader = {
					bpm_clear_upgradeable_country_modifier = { $MOD$ = bpm_repeatable_law_army_defunding_result_permanent }
					every_cobelligerent_in_war = {
						bpm_clear_upgradeable_country_modifier = { $MOD$ = bpm_repeatable_law_army_defunding_result_permanent }
					}
				}
			}
		}
	}
}

on_bpm_revolution_start = {
	effect = {
		bpm_add_political_stability_big = yes # Crackdowns, most disloyal people left for revolution
		scope:target = {
			set_variable = bpm_can_new_constitution
			bpm_setup_country = yes
		}
		if = {
			limit = {
				has_law = law_type:law_monarchy
				scope:target ?= {
					NOT = { has_law = law_type:law_monarchy }
				}
			}
			set_variable = bpm_active_anti_monarchist_revolution
		}
		if = {
			limit = {
				NOT = { has_law = law_type:law_monarchy }
				scope:target ?= {
					has_law = law_type:law_monarchy
				}
			}
			set_variable = bpm_active_monarchist_revolution
		}
		if = {
			limit = {
				NOT = { has_law = law_type:law_council_republic }
				scope:target ?= {
					has_law = law_type:law_council_republic
				}
			}
			set_variable = bpm_active_socialist_revolution
		}
	}
}

on_bpm_civil_war_won = {
	effect = {
		if = {
			limit = {
				has_variable = bpm_can_new_constitution
			}
			trigger_event = { id = bpm_provisional_government_events.1 days = 7 popup = yes }
		}

		if = {
			limit = {
				bpm_country_is_bourgeois_republic = yes
				has_variable = bpm_active_anti_monarchist_revolution
			}
			trigger_event = bpm_send_notification.1
			remove_variable = bpm_active_anti_monarchist_revolution
		}
		else_if = {
			limit = {
				has_law = law_type:law_council_republic
				has_variable = bpm_active_socialist_revolution	
			}
			trigger_event = bpm_send_notification.2
			remove_variable = bpm_active_socialist_revolution
		}
		else_if = {
			limit = {
				has_law = law_type:law_monarchy
				has_variable = bpm_active_monarchist_revolution
			}
			trigger_event = bpm_send_notification.3
			remove_variable = bpm_active_monarchist_revolution
		}
	}
}

on_bpm_government_reformed = {
	effect = {
		bpm_update_single_party_ideology_support = yes
		bpm_cache_country_igs_radical_opposition_effect = yes
		if = {
			limit = {
				has_law = law_type:law_political_officers
			}
			every_scope_admiral = {
				limit = { interest_group = { is_in_government = no bpm_ig_is_state_institutional = no } }
				kill_character = {
					hidden = yes
					value = yes
				}
			}
			every_scope_general = {
				limit = { interest_group = { is_in_government = no bpm_ig_is_state_institutional = no } }
				kill_character = {
					hidden = yes
					value = yes
				}
			}
		}
	}
}

on_bpm_election_campaign_start = {
	effect = {
		every_active_party = {
			limit = {
				is_party_type = one_party_independents
			}

			add_momentum = -200
		}
		bpm_remove_political_stability_small = yes
	}
}

on_bpm_election_campaign_end = {
	effect = {
		every_active_party = {
			limit = {
				is_party_type = one_party_independents
			}

			add_momentum = -200
		}
		bpm_remove_political_stability_small = yes
		if = {
			limit = {
				this = c:USA
				has_variable = bpm_2nd_party_system
			}
			trigger_event = { id = bpm_acw_events.24 days = 0 }
			set_variable = {
				name = bpm_last_president
				value = ruler
			}
		}
	}
}

on_bpm_country_releasing = {
	effect = {
		bpm_copy_variables_to_new_country = yes
		scope:target = {
			bpm_setup_country = yes
		}
	}
}

on_bpm_country_formed = {
	effect = {
		if = {
			limit = { NOT = { has_law = law_type:law_confederated }}
			activate_law = law_type:law_federated
		}
		bpm_setup_country = yes
	}
}

bpm_on_actions_stubbornness = {
	effect = {
		owner = { bpm_setup_country_stubbornness = yes }
	}
}

on_bpm_investment_increased = {
	effect ={ 
		owner = { bpm_institution_workaround_effect = yes }
	}
}

on_bpm_investment_decreased = { 
	effect = { 
		owner = { bpm_institution_workaround_effect = yes }
	}
}

on_bpm_party_created = {
	effect = {
		if = {
			limit = {
				game_date > 1836.1.1
			}
			bpm_set_new_party_loyalty = yes
		}
	}
}

on_bpm_character_creation = {
	effect = {
		if = {
			limit = {
				interest_group ?= { bpm_ig_is_institutional = yes }
			}
			set_variable = bpm_character_in_institutional_ig_var
		}
		bpm_make_idg_characters = yes
	}
}

on_bpm_fasicst_ultramilitarism = {
	random_events = {
		chance_of_no_event = 2
		1 = bpm_lobby.1
		1 = bpm_lobby.2
	}
}