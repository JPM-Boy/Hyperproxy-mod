# All values provided as <modded value> # <vanilla value> for reference.
# If only 1 value is present, vanilla value is used.
# Comments added wherever default vanilla comments were insufficiently clear.

NEconomy = {
	TRADE_ROUTE_BUREAUCRACY_COST = 8 # 20						# The cost in BUR per trade route
	TRADE_ROUTE_START_LEVEL = 1	# Tried 3, bad idea.			# All new trade routes start at this level
	TRADE_ROUTE_MAX_LEVEL = 9999 # 100							# Trade routes cannot be higher level than this
	TRADE_ROUTE_MIN_TOTAL_IMPORTS = 3 # 5						# This amount of a good can always be imported to a market even if there is no demand
	TRADE_ROUTE_DEFAULT_GOODS_QUANTITY = 3 # 5					# Base quantity traded from trade routes, if not otherwise specified in goods type
	TRADE_ROUTE_ECONOMY_OF_SCALE = 0.1 # 0.25					# Each level of trade route after the first adds this % to desired trade quantity
	TRADE_ROUTE_ECONOMY_OF_SCALE_MAX_LEVEL = 500 # 41			# After this level, trade route economy of scale no longer increases the amount per level
	TRADE_ROUTE_REQUIRED_CONVOY_BUFFER = 0.05					# Trade routes may not increase level if you wouldn't end up with at least this 'buffer' of produced convoys
	
	TRADE_ROUTE_USE_AVERAGE_PRE_AND_POST_TRADE_PRICES = no			# Whether trade routes should use an average of pre and post-trade prices or just market prices (0 = market prices, 1 = pre/post trade prices)
	
	TRADE_ROUTE_AUTO_INCREASE_EMPLOYMENT_THRESHOLD = 0.9 					# If trade route has this much of its max staffing level employed, it can automatically increase its level
	TRADE_ROUTE_AUTO_INCREASE_ACCEPTABLE_REVENUE_DIFFERENCE = 1 # 1.1		# Multiply revenue of new trade route level by this for the purpose of considering whether it's OK to auto-increase level (means that trade routes can level up even when slightly decreasing overall revenue)
	TRADE_ROUTE_AUTO_INCREASE_VERY_LOW_PRODUCTIVITY_THRESHOLD = 5 # 3		# If trade route's productivity is below this, always automatically decrease its level (regardless of total revenue)
	TRADE_ROUTE_AUTO_INCREASE_LOW_PRODUCTIVITY_THRESHOLD = 18 # 6			# If trade route's productivity would drop below this, don't automatically increase its level (regardless of total revenue)
	TRADE_ROUTE_AUTO_INCREASE_HIGH_PRODUCTIVITY_THRESHOLD = 500 # 10		# If trade route's productivity is above this, it's always fine to automatically increase its level (regardless of total revenue)
	TRADE_ROUTE_AUTO_REDUCTION_EMPLOYMENT_THRESHOLD = 0.75 					# If trade route has less than this of its max staffing level employed and could not hire anyone last week, it can automatically decrease its level
	TRADE_ROUTE_AUTO_REDUCTION_ACCEPTABLE_REVENUE_DIFFERENCE = 1.1 # 1.15	# Multiply revenue of current trade route level by this for the purpose of considering whether we should auto-decrease level (means that trade routes won't level down just for the purpose of a small revenue increase)
	
	# Other Vanilla trade defines untouched:
	TRADE_CENTER_BASE_NUM_LEVELS_PER_TRADE_ROUTE = 1 		# Each distinct trade route generates this number of Trade Center levels to manage it
	# 	Tried 0 here but it causes quirky edge-cases.
	TRADE_CENTER_NUM_LEVELS_PER_TRADE_ROUTE_LEVEL = 1		# Each level of a trade route generates this number of Trade Center levels to manage it
	TRADE_CENTER_MIN_AVAILABLE_WORKFORCE = 20000			# Don't put new trade centers in places with less available workforce than this
	TRADE_CENTER_TRADE_ROUTE_STATE_FACTOR = 4				# When deciding trade center for a trade route, increase score by this if the state is the exit/entry port for the trade route
	TRADE_CENTER_TRADE_ROUTE_STATE_NEIGHBOR_FACTOR = 2		# When deciding trade center for a trade route, increase score by this if the state neighboring the exit/entry port for the trade route
	TRADE_CENTER_TREATY_PORT_FACTOR = 15 					# When deciding trade center for a trade route, increase score by this for treaty port in the remote market
	TRADE_CENTER_MARKET_CAPITAL_FACTOR = 5					# When deciding trade center for a trade route, increase score by this for the market capital in the market
	TRADE_CENTER_PORT_LEVEL_FACTOR = 1						# When deciding trade center for a trade route, multiply port level by this and add to the score
	TRADE_CENTER_EXISTING_TRADE_ROUTES_FACTOR = -1			# When deciding trade center for a trade route, multiply the number of trade routes already associated with the state by this score
	
	COMPETITIVENESS_PER_TRADE_ROUTE = 100				# Base competitiveness for a trade route
	COMPETITIVENESS_DOMESTIC_TRADE_MULT = 0.2 # 0.5		# Competitiveness is multiplied by ( 1 + this ) if trading country and market controller are the same country
	COMPETITIVENESS_TRADE_AGREEMENT_MULT = 0.5			# Competitiveness is multiplied by ( 1 + this ) if trading country and market controller have a trade agreement
	COMPETITIVENESS_FROM_ROUTE_DURATION = 2.0			# Competitiveness is multiplied by ( 1 + this ) if the trade route has existed for COMPETITIVENESS_DURATION_MAX_MONTHS (scales linearly towards this value at fewer months)
	COMPETITIVENESS_DURATION_BONUS_MAX_MONTHS = 120		# The age at which a trade route receives the maximum bonus to competitiveness
}

NAI = {
	# The AI never cancels current trade routes of this level or above
	TRADE_ROUTE_MAX_LEVEL_TO_CANCEL_SCALING = 0.001 # 0.002 		# Scales with (acting market trade potential * goods quantity per trade route level)
	TRADE_ROUTE_MAX_LEVEL_TO_CANCEL_MIN = 2 # 1						# Always, no matter what, be *capable* of canceling level 1 trade routes.
	TRADE_ROUTE_MAX_LEVEL_TO_CANCEL_MAX = 9999 # 9					# This is actually a nearly useless function that appears to only make the AI hang onto bad routes with large markets.
	
	# Reduce the incidence of weird post-formation trade routes:
	TRADE_ROUTE_MIN_MARKET_SHARE = 0.35 # 0.25 				# If the AI is junior in a customs union and has less than this market share in a market, don't make any trade routes
	# Matches with TRADE_ROUTE_AUTO_INCREASE_VERY_LOW_PRODUCTIVITY_THRESHOLD so there's no oddity:
	TRADE_ROUTE_MIN_ACCEPTABLE_PRODUCTIVITY = 5 # 3			# If a potential trade route would result in lower productivity than this, don't create it unless it's to resolve a shortage
	# The original value just means that big countries stop initiating smaller trades even though they can most afford to have them:
	TRADE_ROUTE_MIN_WANTED_RELATIVE_VOLUME = 0.05 # 0.1		# If a trade route won't account for at least this fraction of buy/sell orders in the market, don't create it
	
	TRADE_ROUTE_MIN_VALUE_TO_IGNORE_VOLUME_CHECK = 2000 # 1000	# If a trade route is trading at least this much base value worth of goods, ignore the relative check above
	TRADE_ROUTE_ACCEPTABLE_SPENDING = 0.002						# AI will not spend more BUR than this on trade routes (scaled by weekly GDP)
	TRADE_ROUTE_ACCEPTABLE_SPENDING_MINIMUM = 20				# If TRADE_ROUTE_ACCEPTABLE_SPENDING is less than this, this is used instead (so even small countries can do some trading other than their free routes)
	TRADE_ROUTE_MARKET_RANDOM_FACTOR = 1.0						# The higher this is, the more random the AI will be about which markets it trades with
	TRADE_ROUTE_GOODS_RANDOM_FACTOR = 1.0						# The higher this is, the more random the AI will be about which goods it selects for trading
	
	# Honestly a weird restriction since there's no inflation or whatever to be driven by trade balance:
	TRADE_ROUTE_EXPORT_VS_IMPORT_TOLERANCE = 4.0 # 3.0 #	# The AI is OK with having up to this amount more import than export routes or vice versa
	# This does cover total traded route value, but also encourages the AI to trade more expensive goods, so increase with caution:
	TRADE_ROUTE_TRADE_VALUE_FACTOR = 30 # 1.0				# The expected final trade volume * base price of goods is multiplied by this
	# Big trade routes are good and should definitely supplant smaller ones if they can:
	TRADE_ROUTE_RELATIVE_VOLUME_FACTOR = 50 # 2.0			# Multiply trade route score by ( 1 + supplied fraction of buy/sell orders in the market * this )
	
	TRADE_ROUTE_WANTED_NEW_GOODS_MULT = 100			# Multiply trade route score by this if the trade route is importing a good to the market that the AI wants and has no local production or other import routes for
	# This is meant to stop them using excessive convoys, but frankly, there're usually too many convoys and not enough trade:
	TRADE_ROUTE_DISTANCE_DIVISOR = 0.001 # 0.002	# Divide the trade route value by 1 + (absolute distance between the two market capitals * this) to encourage AI to trade with nearby markets (we use this instead of more expensive convoy distance calc)
	TRADE_ROUTE_TARIFF_DIVISOR = 2					# Divide the trade route value by 1 + ( total tariff rate * this )
	
	# Sometimes more trade routes are better, consider lowering this value so that multiple profitable trade routes for the same good are considered (this improves the stability effects of changing TRADE_ROUTE_REPLACE_THRESHOLD):
	TRADE_ROUTE_EXISTING_ROUTES_DIVISOR = 0.1 # 0.5			# Score for trade route is divided by (1 + this) for each trade route the market has of the same goods
	
	TRADE_ROUTE_FAVORED_GOODS_MULT = 2.0		# Total weight is multiplied by this if the trade route is trading a good in a way the AI favors
	TRADE_ROUTE_DISFAVORED_GOODS_MULT = 0.5		# Total weight is multiplied by this if the trade route is trading a good in a way the AI disfavors
	
	# It is important the AI can swap bad routes for good ones reasonably efficiently - this is because the AI cannot use the same discernment as a player to pick them as strategically:
	TRADE_ROUTE_REPLACE_THRESHOLD = 1.1 # 5.0				# If there is a sufficiently better new trade route (old route score x this), remove the old one (score already includes competitiveness bonus)
	
	# Vanilla values (solid, change with caution):
	TRADE_ROUTE_SUPPLY_NETWORK_STRENGTH_THRESHOLD = 1.0		# If supply network strength less than this, don't make new trade routes
	TRADE_ROUTE_REDUCE_SHORTAGE_MULT = 10					# Multiply score by this if we're reducing the market's shortages
	TRADE_ROUTE_INCREASE_SHORTAGE_MULT = 0					# Multiply score by this if we're increasing the market's shortages
	TRADE_ROUTE_IMPORT_SCORE_MULT = 1.0						# How much does AI multiply score of import routes
	TRADE_ROUTE_EXPORT_SCORE_MULT = 1.5						# How much does AI multiply score of export routes
	TRADE_ROUTE_DURATION_FACTOR = 10.0						# AI multiplies value of a route by ( 1 + this ) at COMPETITIVENESS_DURATION_BONUS_MAX_MONTHS (scales linearly up to this value at a lower duration)
	
	UNUSED_CAPPED_RESOURCE_RATIO_TO_START_DISCOURAGING_EXPORT = 0.5	# If the untapped potential production of a resource-capped good in the country is not at least market buy orders * this, switch to punitive export tariffs
	UNUSED_CAPPED_RESOURCE_RATIO_TO_STOP_DISCOURAGING_EXPORT = 1.0	# If the untapped potential production of a resource-capped good in the country is at least market buy orders * this, stop applying punitive export tariffs
}
