ig_neocon = {
	color = hsv{ 0.45 1 0.37 }
	texture = "gfx/interface/icons/ig_icons/national_liberals.dds"
	layer = "revolution_dynamic_petty_bourgeoisie"
	index = 21
	
	ideologies = {
		ideology_nonexistent
	}

	character_ideologies = {
		ideology_center_leader
		ideology_traditionalist
		ideology_positivist
		ideology_jingoist_leader
		ideology_protectionist
		ideology_sovereignist_leader
		ideology_liberal_leader
		ideology_positivist
		ideology_corporatist_leader
		ideology_authoritarian
		ideology_reformer

	}
	
	enable = {
		always = yes
	}
	
	on_enable = {
		ig:ig_neocon = {
			# set_ig_trait = ig_trait:ig_trait_right_systematic_corruption
			set_ig_trait = ig_trait:ig_trait_right_bastion_of_freedom
			set_ig_trait = ig_trait:ig_trait_right_systematic_opposition
		}
	}
	on_disable = {}
	on_character_ig_membership = {}
	
	pop_potential = {
		custom_tooltip = {
			text = BPM_VALID_POP_FOR_IG
			owner = {
				ig:ig_neocon = {
					hpx_interest_group_is_activated = yes
				}
			}
		}
	}
	
	pop_weight = {
		value = 30

		if = {
			limit = {
				state = {
					var:governor ?= {
						is_interest_group_type = ig_neocon
					}
				}
			}
			add = {
				desc = "CONSERVATIVE_STATE"
				value = 200
			}
		}
	
		if = {
			limit = {
				is_pop_type = capitalists
			}
			add = {
				desc = "POP_CAPITALISTS"
				value = 175
			}
		}
		else_if = {
			limit = { strata = middle }
			add = {
				desc = "MIDDLE_CLASS"
				value = 500
			}
		}
		else_if = {
			limit = { strata = lower }
			add = {
				desc = "LOWER_CLASS"
				value = 200
			}
		}

		# RURAL
		if = {
			limit = {
				OR = {
					pop_employment_building_group = bg_agriculture
					pop_employment_building_group = bg_ranching
					pop_employment_building_group = bg_plantations
				}	
			}
			add = {
				desc = "RURAL"
				value = 50
			}
			if = {
				limit = { strata = rich }
				add = {
					desc = "RURAL_UPPER_CLASS"
					value = 1000
				}
			}
		}

		# PATCON AND URBAN
		else_if = {
			limit = {
				scope:interest_group = { has_ideology = ideology:ideology_wel_paternalistic_welfare }
			}
			if = {
				limit = { strata = rich }
				add = {
					desc = "PATCON_CAPITALISTS"
					value = 500
				}
			}
			else_if = {
				limit = { strata = middle }
				add = {
					desc = "PATCON_MIDDLE_CLASS"
					value = 500
				}
			}
			else_if = {
				limit = { strata = lower }
				add = {
					desc = "PATCON_LOWER_CLASS"
					value = 500
				}
			}
		}

		multiply = {
			desc = "UNEDUCATED"
			value = literacy_rate
			multiply = 2.0
			max = 1.0
		}

		multiply = ig_attraction_to_ruler_ideology_from_stability

		if = {
			limit = { owner = { bpm_performance_significant_country = yes } }
			multiply = {
				desc = "IN_WAR"	
				value = 1.0
	
				if = {
					limit = { owner = { is_at_war = yes } }
					value = 1.25
				}		
			}
			multiply = {
				desc = "LEADER_POPULARITY"
				scope:interest_group = {
					leader = {
						value = popularity
						multiply = 0.005
						add = 1
						max = 1.5
						min = 0.67
					}
				}
			}	
			multiply = {
				desc = "STILL_OLIGARCHIC"
				value = 1.0
				if = {
					limit = {
						owner = {
							has_law = law_type:law_oligarchy
							has_law = law_type:law_monarchy
						}
					}
					value = 0.5
				}
			}
			multiply = bpm_ig_agitators_popularity
			multiply = bpm_ig_ruler_popularity
			multiply = ig_attraction_from_radicals_and_loyalists
		}
	}
	
	monarch_weight = {
		value = 1.0
	}	

	agitator_weight = {
		value = 1.0
		multiply = bpm_base_agitator_weight
	}
	
	commander_weight = {
		value = 1.0
		multiply = bpm_commander_assignment_from_laws_factor
	}	
	
	noble_chance = {
		value = 0.3
	}
	
	female_commander_chance = {	
		value = 1.0
		multiply = bpm_female_commander_spawn_chance
	}
	
	female_politician_chance = {
		value = 1.0
		multiply = bpm_female_character_spawn_chance
	}	

	female_agitator_chance = {
		value = 1.0
		multiply = bpm_female_character_spawn_chance		
	}
	
	# The chance that a commander belonging to this IG takes over leadership when it changes
	# scope:character is the most popular commander in the IG
	commander_leader_chance = {
		value = 0.25
		if = {
			limit = {
				exists = scope:character
			}
			multiply = {
				value = 1
				add = scope:character.popularity
				min = 0
			}
		}
	}
}